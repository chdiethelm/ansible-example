---

vip: 10.10.10.10
public_aliases: "{{ domain }} www.{{ domain }} static.{{ domain }} app.{{ domain }}"

# Haproxy config
haproxy_user: "root"

haproxy_global:
  chroot: true
  pidfile: "{{ shared_path }}/haproxy.pid"
  maxconn: 1000
  user: "{{ haproxy_user }}"
  group: "{{ haproxy_user }}"
  daemon: true
  spread_checks: true
  stats:
      socket: "{{ shared_path }}/haproxy.sock"

haproxy_frontends:
  - name: http
    ip: "{{ vip }}:80"
    bind: "{{ vip }}"
    maxconn: 1000
    # monitor: 
    #   uri:
    #   fail:
    #     - <condition>
    acl:
      - name: rule1
        condition: hdr_beg(host) -i static
    default_backend: appserver
    use_backend:
      - name: webserver
        condition: rule1

haproxy_backends:
  - name: appserver
    disabled: false
    description: jetty
    balance: 100
    log: "{{ log_shared_path }}/{{ ansible_fqdn }}.log"
    retries: 3
    contimeout: 20
    http-send-name-header: true
    # acl:
    #   - name: rule1
    #     condition: hdr_dom(host) -i "{{ domain }}" -i "app.{{ domain }}" -i "www.{{ domain }}"
    servers:
      - name: app-01
        ip: 10.10.10.13
        port: 8080
    options:
        - forwardfor

  - name: webserver
    disabled: false
    description: nginx
    balance: 100
    log: "{{ log_shared_path }}/{{ ansible_fqdn }}.log"
    retries: 3
    contimeout: 20
    http-send-name-header: true
    # acl:
    #   - name: rule2
    #     condition: hdr_dom(host) -i "static.{{ domain }}"
    servers:
      - name: web-01
        ip: 10.10.10.12
        port: 80
    options:
        - forwardfor
